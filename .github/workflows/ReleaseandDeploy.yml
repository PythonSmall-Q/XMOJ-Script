name: Release and Deploy
on:
  push:
    branches: ["master"]
  workflow_dispatch:
permissions:
    id-token: write
    contents: write
    pages: write
    deployments: write
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Exit
        if: github.event_name == 'push' && contains(github.event.head_commit.modified, 'XMOJ.user.js')
        run: exit 0
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Update Version
        id: update_version
        run: node ./Update.js
      - name: Obfuse JS
        run: |
          npm install javascript-obfuscator -g
          javascript-obfuscator XMOJ.user.js --output XMOJ.min.tmp.user.js --compact true --control-flow-flattening false --dead-code-injection false --debug-protection false --debug-protection-interval 0 --disable-console-output false --identifier-names-generator hexadecimal --log false --numbers-to-expressions false --rename-globals false --self-defending false --simplify true --split-strings false --string-array true --string-array-calls-transform false --string-array-calls-transform-threshold 0.5 --string-array-encoding rc4 --string-array-index-shift true --string-array-rotate true --string-array-shuffle true --string-array-wrappers-count 1 --string-array-wrappers-chained-calls true --string-array-wrappers-parameters-max-count 2 --string-array-wrappers-type variable --string-array-threshold 0.75 --unicode-escape-sequence false
          sed -n '/\/\/ Program Start/q;p' XMOJ.user.js > XMOJ.min.user.js
          cat XMOJ.min.tmp.user.js >> XMOJ.min.user.js
          rm XMOJ.min.tmp.user.js
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.update_version.outputs.version }}
          release_name: ${{ steps.update_version.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.update_version.outputs.version }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./XMOJ.user.js
          asset_name: XMOJ.user.js
          asset_content_type: text/plain
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./XMOJ.min.user.js
          asset_name: XMOJ.min.user.js
          asset_content_type: text/plain
  deploy:
    name: Deploy
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Version
        id: get_version
        run: echo "version=$(cat XMOJ.user.js | grep -oP '(?<=@version)\s*.*' | tr -d ' ')" >> $GITHUB_ENV
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Push new version
        run: |
          git config --global user.name "langningchen"
          git config --global user.email "jpxx_chenlangning@outlook.com"
          git add .
          git commit -m "Update version to ${{ steps.get_version.outputs.version }}"
          git push
